// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Accounts renders initially as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="Accounts"
    infoText="Here you can choose which accounts you want expenses from. Press [Save] to save the changes"
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <Styled(Container)
    style={
      Object {
        "justifyContent": "center",
      }
    }
  >
    <FlatList
      data={Array []}
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(Container)>
  <Separator />
  <Styled(Button)
    onPress={[Function]}
    rounded={true}
    style={
      Array [
        Object {
          "alignSelf": "center",
          "height": 40,
          "justifyContent": "center",
          "marginBottom": 20,
          "marginTop": 20,
          "width": "90%",
        },
        Object {
          "backgroundColor": "#00263A",
        },
      ]
    }
  >
    <Styled(Text)
      style={
        Object {
          "alignSelf": "center",
          "color": "white",
          "fontWeight": "600",
        }
      }
    >
      Save
    </Styled(Text)>
  </Styled(Button)>
</Styled(Container)>
`;

exports[`Testing SignIn renders as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="Accounts"
    infoText="Here you can choose which accounts you want expenses from. Press [Save] to save the changes"
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <Styled(Container)
    style={
      Object {
        "justifyContent": "center",
      }
    }
  >
    <FlatList
      data={Array []}
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(Container)>
  <Separator />
  <Styled(Button)
    onPress={[Function]}
    rounded={true}
    style={
      Array [
        Object {
          "alignSelf": "center",
          "height": 40,
          "justifyContent": "center",
          "marginBottom": 20,
          "marginTop": 20,
          "width": "90%",
        },
        Object {
          "backgroundColor": "#00263A",
        },
      ]
    }
  >
    <Styled(Text)
      style={
        Object {
          "alignSelf": "center",
          "color": "white",
          "fontWeight": "600",
        }
      }
    >
      Save
    </Styled(Text)>
  </Styled(Button)>
</Styled(Container)>
`;

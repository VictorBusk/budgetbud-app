// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Budget renders Budgetform in loading state as expected 1`] = `
<Container
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "marginBottom": 5,
          "marginTop": 10,
          "width": "90%",
        },
        Object {
          "paddingTop": 10,
        },
      ]
    }
  >
    <Styled(Label)
      style={
        Array [
          Object {
            "alignSelf": "flex-start",
            "fontSize": 14,
            "fontWeight": "400",
            "marginLeft": 5,
          },
          Object {
            "color": "#003755",
          },
        ]
      }
    >
      Enter income
    </Styled(Label)>
    <Styled(Item)
      rounded={true}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "height": 40,
            "marginVertical": 5,
            "paddingVertical": 0,
          },
          Object {
            "backgroundColor": "#F6F7F9",
            "borderColor": "#003755",
          },
        ]
      }
    >
      <Styled(Input)
        keyboardType="numeric"
        style={
          Object {
            "color": "#003755",
          }
        }
        value="undefined"
      />
    </Styled(Item)>
  </View>
  <View
    style={
      Object {
        "marginTop": 10,
      }
    }
  >
    <Separator />
  </View>
  <View
    style={
      Object {
        "flex": 4,
        "justifyContent": "center",
      }
    }
  >
    <Styled(Spinner)
      color="#1c313a"
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    />
  </View>
  <Separator />
  <View
    style={
      Object {
        "alignSelf": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flexDirection": "column",
          "flexGrow": 1,
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginTop": "3%",
            "width": "90%",
          }
        }
      >
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          Total expense goals
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          12
           
          kr
        </Styled(Text)>
      </View>
      <View
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginTop": "3%",
            "width": "90%",
          }
        }
      >
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          Disposable
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "red",
              },
            ]
          }
        >
           
          kr
        </Styled(Text)>
      </View>
    </View>
  </View>
  <View>
    <Styled(Button)
      onPress={[Function]}
      rounded={true}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "height": 40,
            "justifyContent": "center",
            "marginBottom": 20,
            "marginTop": 20,
            "width": "90%",
          },
          Object {
            "backgroundColor": "#00263A",
          },
        ]
      }
    >
      <Styled(Text)
        style={
          Object {
            "alignSelf": "center",
            "color": "white",
            "fontWeight": "600",
          }
        }
      >
        Save
      </Styled(Text)>
    </Styled(Button)>
  </View>
</Container>
`;

exports[`Budget renders CreateBudget as expected 1`] = `
<Styled(Container)
  style={
    Array [
      Object {
        "backgroundColor": "#ffffff",
      },
      Object {
        "alignItems": "stretch",
      },
    ]
  }
>
  <AppHeader
    headerText="Create budget"
    infoText="Here you can create a new budget. The expense goals can be pre-filled based on your expenses for the last three months from your connected accounts."
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <BudgetForm
    budgetError=""
    budgetID=""
    budgetLoading={false}
    categoriesLoading={false}
    handleSubmit={[Function]}
    onCategoryChanged={[Function]}
    onIncomeChanged={[Function]}
    submitLoading={false}
    tmpCategories={Array []}
    tmpDisposable={0}
    tmpIncome={0}
    tmpTotalGoalsAmount={0}
  />
</Styled(Container)>
`;

exports[`Budget renders EditBudget as expected 1`] = `
<Styled(Container)
  style={
    Array [
      Object {
        "backgroundColor": "#ffffff",
      },
      Object {
        "alignItems": "stretch",
      },
    ]
  }
>
  <AppHeader
    headerText="Edit budget"
    infoText="Here you can edit your budget by updating the amounts in the input fields and pressing [Save]. Expense goals will only be added if they have an amount greater than 0."
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <BudgetForm
    budgetError=""
    budgetID=""
    budgetLoading={false}
    categoriesLoading={false}
    handleSubmit={[Function]}
    onCategoryChanged={[Function]}
    onIncomeChanged={[Function]}
    submitLoading={false}
    tmpCategories={Array []}
    tmpDisposable={0}
    tmpIncome={0}
    tmpTotalGoalsAmount={0}
  />
</Styled(Container)>
`;

exports[`Budget renders Intro as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="My budget"
    infoText="Here you can get an overview of your budget. Press the arrow icon to open the toolbox. The three buttons in the toolbox navigate to editing screens where you can manage parts of your budget."
    onLeftButtonPress={[Function]}
  />
  <Styled(Container)>
    <Styled(ViewNB)
      style={
        Object {
          "flex": 0.1,
          "justifyContent": "center",
        }
      }
    >
      <Styled(ViewNB)
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 15,
            "paddingRight": 18,
          }
        }
      >
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          Income
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          0
           
          kr
        </Styled(Text)>
      </Styled(ViewNB)>
    </Styled(ViewNB)>
    <Separator />
    <Styled(ViewNB)
      style={
        Object {
          "flex": 0.7,
        }
      }
    >
      <SectionList
        data={Array []}
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        renderSectionHeader={[Function]}
        scrollEventThrottle={50}
        sections={
          Array [
            Object {
              "data": Array [],
              "isCategorySection": true,
              "title": "Goals for expenses",
            },
            Object {
              "data": Array [],
              "isCategorySection": false,
              "title": "Goals for debts",
            },
          ]
        }
        stickySectionHeadersEnabled={true}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
      <Separator />
    </Styled(ViewNB)>
    <Styled(ViewNB)
      style={
        Object {
          "flex": 0.2,
        }
      }
    >
      <Styled(ViewNB)
        style={
          Object {
            "flex": 1,
            "justifyContent": "space-between",
            "marginBottom": 0,
          }
        }
      >
        <Styled(ViewNB)
          style={
            Object {
              "flex": 0.6,
              "justifyContent": "space-between",
            }
          }
        >
          <Styled(ViewNB)
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingLeft": 15,
                  "paddingRight": 18,
                },
                Object {
                  "flex": 1,
                  "paddingTop": "5%",
                },
              ]
            }
          >
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              Total expense goals
            </Styled(Text)>
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              0
               
              kr
            </Styled(Text)>
          </Styled(ViewNB)>
          <Styled(ViewNB)
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingLeft": 15,
                  "paddingRight": 18,
                },
                Object {
                  "flex": 1,
                  "paddingTop": "4%",
                },
              ]
            }
          >
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              Disposable
            </Styled(Text)>
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              0
               
              kr
            </Styled(Text)>
          </Styled(ViewNB)>
        </Styled(ViewNB)>
        <Styled(Button)
          onPress={[Function]}
          style={
            Array [
              Object {
                "alignSelf": "flex-end",
                "justifyContent": "flex-end",
              },
              Object {
                "flex": 0.4,
              },
            ]
          }
          transparent={true}
        >
          <Styled(Icon)
            name="ios-arrow-dropup-circle"
            style={
              Object {
                "color": "#00263A",
              }
            }
          />
        </Styled(Button)>
        <Toolbox
          navigateUser={[Function]}
        />
      </Styled(ViewNB)>
    </Styled(ViewNB)>
  </Styled(Container)>
</Styled(Container)>
`;

exports[`Budget renders MyBudget as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="My budget"
    infoText="Here you can get an overview of your budget. Press the arrow icon to open the toolbox. The three buttons in the toolbox navigate to editing screens where you can manage parts of your budget."
    onLeftButtonPress={[Function]}
  />
  <Styled(Container)>
    <Styled(ViewNB)
      style={
        Object {
          "flex": 0.1,
          "justifyContent": "center",
        }
      }
    >
      <Styled(ViewNB)
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 15,
            "paddingRight": 18,
          }
        }
      >
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          Income
        </Styled(Text)>
        <Styled(Text)
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "fontSize": 16,
                "marginLeft": 5,
              },
              Object {
                "color": "#003755",
              },
            ]
          }
        >
          0
           
          kr
        </Styled(Text)>
      </Styled(ViewNB)>
    </Styled(ViewNB)>
    <Separator />
    <Styled(ViewNB)
      style={
        Object {
          "flex": 0.7,
        }
      }
    >
      <SectionList
        data={Array []}
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        renderSectionHeader={[Function]}
        scrollEventThrottle={50}
        sections={
          Array [
            Object {
              "data": Array [],
              "isCategorySection": true,
              "title": "Goals for expenses",
            },
            Object {
              "data": Array [],
              "isCategorySection": false,
              "title": "Goals for debts",
            },
          ]
        }
        stickySectionHeadersEnabled={true}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
      <Separator />
    </Styled(ViewNB)>
    <Styled(ViewNB)
      style={
        Object {
          "flex": 0.2,
        }
      }
    >
      <Styled(ViewNB)
        style={
          Object {
            "flex": 1,
            "justifyContent": "space-between",
            "marginBottom": 0,
          }
        }
      >
        <Styled(ViewNB)
          style={
            Object {
              "flex": 0.6,
              "justifyContent": "space-between",
            }
          }
        >
          <Styled(ViewNB)
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingLeft": 15,
                  "paddingRight": 18,
                },
                Object {
                  "flex": 1,
                  "paddingTop": "5%",
                },
              ]
            }
          >
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              Total expense goals
            </Styled(Text)>
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              0
               
              kr
            </Styled(Text)>
          </Styled(ViewNB)>
          <Styled(ViewNB)
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingLeft": 15,
                  "paddingRight": 18,
                },
                Object {
                  "flex": 1,
                  "paddingTop": "4%",
                },
              ]
            }
          >
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              Disposable
            </Styled(Text)>
            <Styled(Text)
              style={
                Array [
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 16,
                    "marginLeft": 5,
                  },
                  Object {
                    "color": "#003755",
                  },
                ]
              }
            >
              0
               
              kr
            </Styled(Text)>
          </Styled(ViewNB)>
        </Styled(ViewNB)>
        <Styled(Button)
          onPress={[Function]}
          style={
            Array [
              Object {
                "alignSelf": "flex-end",
                "justifyContent": "flex-end",
              },
              Object {
                "flex": 0.4,
              },
            ]
          }
          transparent={true}
        >
          <Styled(Icon)
            name="ios-arrow-dropup-circle"
            style={
              Object {
                "color": "#00263A",
              }
            }
          />
        </Styled(Button)>
        <Toolbox
          navigateUser={[Function]}
        />
      </Styled(ViewNB)>
    </Styled(ViewNB)>
  </Styled(Container)>
</Styled(Container)>
`;

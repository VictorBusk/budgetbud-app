// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Debt renders CreateDebt as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="Create Debt"
    infoText="Here you can create a debt item. Choose when the debt must be paid off and from which expense goals the debt should be subtracted. Press [Continue] to see a preview of the changes."
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <DebtForm
    amount=""
    amountChanged={[Function]}
    categoriesLoading={false}
    categoriesSelected={[Function]}
    categoryItems={Array []}
    debtLoading={false}
    expirationDate=""
    expirationDateChanged={[Function]}
    name=""
    nameChanged={[Function]}
    onContinuePress={[Function]}
    selectedCategories={Array []}
  />
</Styled(Container)>
`;

exports[`Debt renders DebtOverview as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <ConfirmDialog
    confirmCallback={[Function]}
    debtLoading={false}
    text="Do you want to delete the selected debt?"
    title="Confirm deletion"
  />
  <Styled(Container)>
    <AppHeader
      headerText="Debt overview"
      infoText="Here you can see all your created debt items. [Create debt] allows you to add a new debt item. Edit a debt item by pressing the pencil icon and delete the debt item by pressing the trash can icon."
      onLeftButtonPress={[Function]}
      showBackButton={true}
    />
    <Styled(Container)
      style={
        Object {
          "flex": 4,
          "justifyContent": "center",
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </Styled(Container)>
    <Separator />
    <Styled(Button)
      onPress={[Function]}
      rounded={true}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "height": 40,
            "justifyContent": "center",
            "marginBottom": 20,
            "marginTop": 20,
            "width": "90%",
          },
          Object {
            "backgroundColor": "#00263A",
          },
        ]
      }
    >
      <Styled(Text)
        style={
          Object {
            "alignSelf": "center",
            "color": "white",
            "fontWeight": "600",
          }
        }
      >
        Create debt
      </Styled(Text)>
    </Styled(Button)>
  </Styled(Container)>
</Styled(Container)>
`;

exports[`Debt renders DebtPreview as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="Debt preview"
    infoText="Here is a preview of how your changes affect your budget. Press [Save] to save these changes."
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <Styled(Content)
    style={
      Object {
        "flex": 4,
      }
    }
  >
    <FlatList
      data={Array []}
      disableVirtualization={false}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(Content)>
  <Separator />
  <Styled(Button)
    onPress={[Function]}
    rounded={true}
    style={
      Array [
        Object {
          "alignSelf": "center",
          "height": 40,
          "justifyContent": "center",
          "marginBottom": 20,
          "marginTop": 20,
          "width": "90%",
        },
        Object {
          "backgroundColor": "#00263A",
        },
      ]
    }
  >
    <Styled(Text)
      style={
        Object {
          "alignSelf": "center",
          "color": "white",
          "fontWeight": "600",
        }
      }
    >
      Save
    </Styled(Text)>
  </Styled(Button)>
</Styled(Container)>
`;

exports[`Debt renders EditDebt as expected 1`] = `
<Styled(Container)
  style={
    Object {
      "backgroundColor": "#ffffff",
    }
  }
>
  <AppHeader
    headerText="Edit debt"
    infoText="Here you can edit a debt item. Choose when the debt must be paid off and from which expense goals the debt should be subtracted. Press [Continue] to see a preview of the changes."
    onLeftButtonPress={[Function]}
    showBackButton={true}
  />
  <DebtForm
    amount=""
    amountChanged={[Function]}
    categoriesLoading={false}
    categoriesSelected={[Function]}
    categoryItems={Array []}
    debtLoading={false}
    expirationDate=""
    expirationDateChanged={[Function]}
    name=""
    nameChanged={[Function]}
    onContinuePress={[Function]}
    selectedCategories={Array []}
  />
</Styled(Container)>
`;
